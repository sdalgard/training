/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated.kevoree;
import org.thingml.generated.*;
import org.kevoree.annotation.*;
import org.kevoree.log.Log;
import org.thingml.generated.api.*;
import org.thingml.java.*;
import org.thingml.java.ext.*;
import org.thingml.generated.messages.*;

import com.eclipsesource.json.JsonObject;



@ComponentType
 public class KJavaPIF{//The Kevoree component wraps the whole ThingML configuration JavaPIF
//Things
private PIFEnder PIFEnder_JavaPIF_ender3;
private TimerJava TimerJava_JavaPIF_timer2;
private PIFStarter PIFStarter_JavaPIF_starter2;
private JavaPrinter JavaPrinter_JavaPIF_printer;
private TimerJava TimerJava_JavaPIF_timer1;
private TimerJava TimerJava_JavaPIF_timer3;
private PIFEnder PIFEnder_JavaPIF_ender1;
private PIFEnder PIFEnder_JavaPIF_ender2;
private PIFStarter PIFStarter_JavaPIF_starter3;
private PIFStarter PIFStarter_JavaPIF_starter1;
//Output ports (dangling ports in the ThingML configuration)
@Output
private org.kevoree.api.Port JavaPIF_starter2_to_enderPort_out;
@Output
private org.kevoree.api.Port JavaPIF_starter3_to_enderPort_out;
@Output
private org.kevoree.api.Port JavaPIF_starter1_to_enderPort_out;
@Input
public void JavaPIF_ender1_from_starterPort(String string) {
final JsonObject json = JsonObject.readFrom(string);
//if (json.get("port").asString().equals("from_starter_c")) {
if (json.get("message").asString().equals("pif_token")) {
final Event msg = PIFEnder_JavaPIF_ender1.getPif_tokenType().instantiate(PIFEnder_JavaPIF_ender1.getFrom_starter_port(), (short) json.get("token").asInt());
PIFEnder_JavaPIF_ender1.receive(msg, PIFEnder_JavaPIF_ender1.getFrom_starter_port());
}
//}
}

@Input
public void JavaPIF_ender2_from_starterPort(String string) {
final JsonObject json = JsonObject.readFrom(string);
//if (json.get("port").asString().equals("from_starter_c")) {
if (json.get("message").asString().equals("pif_token")) {
final Event msg = PIFEnder_JavaPIF_ender2.getPif_tokenType().instantiate(PIFEnder_JavaPIF_ender2.getFrom_starter_port(), (short) json.get("token").asInt());
PIFEnder_JavaPIF_ender2.receive(msg, PIFEnder_JavaPIF_ender2.getFrom_starter_port());
}
//}
}

@Input
public void JavaPIF_ender3_from_starterPort(String string) {
final JsonObject json = JsonObject.readFrom(string);
//if (json.get("port").asString().equals("from_starter_c")) {
if (json.get("message").asString().equals("pif_token")) {
final Event msg = PIFEnder_JavaPIF_ender3.getPif_tokenType().instantiate(PIFEnder_JavaPIF_ender3.getFrom_starter_port(), (short) json.get("token").asInt());
PIFEnder_JavaPIF_ender3.receive(msg, PIFEnder_JavaPIF_ender3.getFrom_starter_port());
}
//}
}

//Attributes
//Getters and Setters for non readonly/final attributes
@Param (defaultValue = "2")
private short JavaPIF_ender2_PIFEnder_mynum__var = 2;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_ender2_PIFEnder_mynum__var() {
return JavaPIF_ender2_PIFEnder_mynum__var;
}

public void setJavaPIF_ender2_PIFEnder_mynum__var(short PIFEnder_mynum__var){
this.JavaPIF_ender2_PIFEnder_mynum__var = PIFEnder_mynum__var;
this.PIFEnder_JavaPIF_ender2.setPIFEnder_mynum__var(PIFEnder_mynum__var);
}

//Getters and Setters for non readonly/final attributes
//Getters and Setters for non readonly/final attributes
@Param (defaultValue = "1")
private short JavaPIF_starter2_PIFStarter_count__var = 1;
@Param (defaultValue = "2")
private short JavaPIF_starter2_PIFStarter_mynum__var = 2;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_starter2_PIFStarter_count__var() {
return JavaPIF_starter2_PIFStarter_count__var;
}

public void setJavaPIF_starter2_PIFStarter_count__var(short PIFStarter_count__var){
this.JavaPIF_starter2_PIFStarter_count__var = PIFStarter_count__var;
this.PIFStarter_JavaPIF_starter2.setPIFStarter_count__var(PIFStarter_count__var);
}

public short getJavaPIF_starter2_PIFStarter_mynum__var() {
return JavaPIF_starter2_PIFStarter_mynum__var;
}

public void setJavaPIF_starter2_PIFStarter_mynum__var(short PIFStarter_mynum__var){
this.JavaPIF_starter2_PIFStarter_mynum__var = PIFStarter_mynum__var;
this.PIFStarter_JavaPIF_starter2.setPIFStarter_mynum__var(PIFStarter_mynum__var);
}

@Param (defaultValue = "1")
private short JavaPIF_starter1_PIFStarter_count__var = 1;
@Param (defaultValue = "1")
private short JavaPIF_starter1_PIFStarter_mynum__var = 1;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_starter1_PIFStarter_count__var() {
return JavaPIF_starter1_PIFStarter_count__var;
}

public void setJavaPIF_starter1_PIFStarter_count__var(short PIFStarter_count__var){
this.JavaPIF_starter1_PIFStarter_count__var = PIFStarter_count__var;
this.PIFStarter_JavaPIF_starter1.setPIFStarter_count__var(PIFStarter_count__var);
}

public short getJavaPIF_starter1_PIFStarter_mynum__var() {
return JavaPIF_starter1_PIFStarter_mynum__var;
}

public void setJavaPIF_starter1_PIFStarter_mynum__var(short PIFStarter_mynum__var){
this.JavaPIF_starter1_PIFStarter_mynum__var = PIFStarter_mynum__var;
this.PIFStarter_JavaPIF_starter1.setPIFStarter_mynum__var(PIFStarter_mynum__var);
}

@Param (defaultValue = "1")
private short JavaPIF_ender1_PIFEnder_mynum__var = 1;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_ender1_PIFEnder_mynum__var() {
return JavaPIF_ender1_PIFEnder_mynum__var;
}

public void setJavaPIF_ender1_PIFEnder_mynum__var(short PIFEnder_mynum__var){
this.JavaPIF_ender1_PIFEnder_mynum__var = PIFEnder_mynum__var;
this.PIFEnder_JavaPIF_ender1.setPIFEnder_mynum__var(PIFEnder_mynum__var);
}

//Getters and Setters for non readonly/final attributes
@Param (defaultValue = "1")
private short JavaPIF_starter3_PIFStarter_count__var = 1;
@Param (defaultValue = "3")
private short JavaPIF_starter3_PIFStarter_mynum__var = 3;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_starter3_PIFStarter_count__var() {
return JavaPIF_starter3_PIFStarter_count__var;
}

public void setJavaPIF_starter3_PIFStarter_count__var(short PIFStarter_count__var){
this.JavaPIF_starter3_PIFStarter_count__var = PIFStarter_count__var;
this.PIFStarter_JavaPIF_starter3.setPIFStarter_count__var(PIFStarter_count__var);
}

public short getJavaPIF_starter3_PIFStarter_mynum__var() {
return JavaPIF_starter3_PIFStarter_mynum__var;
}

public void setJavaPIF_starter3_PIFStarter_mynum__var(short PIFStarter_mynum__var){
this.JavaPIF_starter3_PIFStarter_mynum__var = PIFStarter_mynum__var;
this.PIFStarter_JavaPIF_starter3.setPIFStarter_mynum__var(PIFStarter_mynum__var);
}

@Param (defaultValue = "3")
private short JavaPIF_ender3_PIFEnder_mynum__var = 3;
//Getters and Setters for non readonly/final attributes
public short getJavaPIF_ender3_PIFEnder_mynum__var() {
return JavaPIF_ender3_PIFEnder_mynum__var;
}

public void setJavaPIF_ender3_PIFEnder_mynum__var(short PIFEnder_mynum__var){
this.JavaPIF_ender3_PIFEnder_mynum__var = PIFEnder_mynum__var;
this.PIFEnder_JavaPIF_ender3.setPIFEnder_mynum__var(PIFEnder_mynum__var);
}

//Empty Constructor
public KJavaPIF() {
initThingML();
}

//Instantiates ThingML component instances and connectors
private void initThingML() {
//Things
TimerJava_JavaPIF_timer3 = (TimerJava) new TimerJava("JavaPIF_timer3: TimerJava", (Thread)null).buildBehavior();
TimerJava_JavaPIF_timer2 = (TimerJava) new TimerJava("JavaPIF_timer2: TimerJava", (Thread)null).buildBehavior();
TimerJava_JavaPIF_timer1 = (TimerJava) new TimerJava("JavaPIF_timer1: TimerJava", (Thread)null).buildBehavior();
PIFEnder_JavaPIF_ender1 = (PIFEnder) new PIFEnder("JavaPIF_ender1: PIFEnder", (short)1).buildBehavior();
PIFStarter_JavaPIF_starter1 = (PIFStarter) new PIFStarter("JavaPIF_starter1: PIFStarter", (short)3000, (short)1, (short)1).buildBehavior();
PIFEnder_JavaPIF_ender3 = (PIFEnder) new PIFEnder("JavaPIF_ender3: PIFEnder", (short)3).buildBehavior();
PIFStarter_JavaPIF_starter3 = (PIFStarter) new PIFStarter("JavaPIF_starter3: PIFStarter", (short)5000, (short)1, (short)3).buildBehavior();
PIFEnder_JavaPIF_ender2 = (PIFEnder) new PIFEnder("JavaPIF_ender2: PIFEnder", (short)2).buildBehavior();
JavaPrinter_JavaPIF_printer = (JavaPrinter) new JavaPrinter("JavaPIF_printer: JavaPrinter").buildBehavior();
PIFStarter_JavaPIF_starter2 = (PIFStarter) new PIFStarter("JavaPIF_starter2: PIFStarter", (short)4000, (short)1, (short)2).buildBehavior();
//Connectors
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFEnder_JavaPIF_ender1.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFEnder_JavaPIF_ender1);
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFEnder_JavaPIF_ender3.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFEnder_JavaPIF_ender3);
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFStarter_JavaPIF_starter1.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFStarter_JavaPIF_starter1);
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFStarter_JavaPIF_starter3.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFStarter_JavaPIF_starter3);
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFStarter_JavaPIF_starter2.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFStarter_JavaPIF_starter2);
new Connector(PIFStarter_JavaPIF_starter1.getTimer_port(), TimerJava_JavaPIF_timer1.getTimer_port(), PIFStarter_JavaPIF_starter1, TimerJava_JavaPIF_timer1);
new Connector(PIFStarter_JavaPIF_starter3.getTimer_port(), TimerJava_JavaPIF_timer3.getTimer_port(), PIFStarter_JavaPIF_starter3, TimerJava_JavaPIF_timer3);
new Connector(JavaPrinter_JavaPIF_printer.getPrint_port(), PIFEnder_JavaPIF_ender2.getPrint_port(), JavaPrinter_JavaPIF_printer, PIFEnder_JavaPIF_ender2);
new Connector(PIFStarter_JavaPIF_starter2.getTimer_port(), TimerJava_JavaPIF_timer2.getTimer_port(), PIFStarter_JavaPIF_starter2, TimerJava_JavaPIF_timer2);
final IPIFStarter_to_enderClient JavaPIF_starter2_to_ender_listener = new IPIFStarter_to_enderClient(){
@Override
public void pif_token_from_to_ender(short PrintIncForwardMsgs_pif_token_token__var) {
final String msg = "{\"message\":\"pif_token\",\"port\":\"to_ender_c\", \"token\":" + PrintIncForwardMsgs_pif_token_token__var + "}";
try {
JavaPIF_starter2_to_enderPort_out.send(msg, null);
} catch(NullPointerException npe) {
Log.warn("Port JavaPIF_starter2_to_enderPort_out is not connected.\nMessage " + msg + " has been lost.\nConnect a channel (and maybe restart your component JavaPIF)");
}
}
};
PIFStarter_JavaPIF_starter2.registerOnTo_ender(JavaPIF_starter2_to_ender_listener);
final IPIFStarter_to_enderClient JavaPIF_starter3_to_ender_listener = new IPIFStarter_to_enderClient(){
@Override
public void pif_token_from_to_ender(short PrintIncForwardMsgs_pif_token_token__var) {
final String msg = "{\"message\":\"pif_token\",\"port\":\"to_ender_c\", \"token\":" + PrintIncForwardMsgs_pif_token_token__var + "}";
try {
JavaPIF_starter3_to_enderPort_out.send(msg, null);
} catch(NullPointerException npe) {
Log.warn("Port JavaPIF_starter3_to_enderPort_out is not connected.\nMessage " + msg + " has been lost.\nConnect a channel (and maybe restart your component JavaPIF)");
}
}
};
PIFStarter_JavaPIF_starter3.registerOnTo_ender(JavaPIF_starter3_to_ender_listener);
final IPIFStarter_to_enderClient JavaPIF_starter1_to_ender_listener = new IPIFStarter_to_enderClient(){
@Override
public void pif_token_from_to_ender(short PrintIncForwardMsgs_pif_token_token__var) {
final String msg = "{\"message\":\"pif_token\",\"port\":\"to_ender_c\", \"token\":" + PrintIncForwardMsgs_pif_token_token__var + "}";
try {
JavaPIF_starter1_to_enderPort_out.send(msg, null);
} catch(NullPointerException npe) {
Log.warn("Port JavaPIF_starter1_to_enderPort_out is not connected.\nMessage " + msg + " has been lost.\nConnect a channel (and maybe restart your component JavaPIF)");
}
}
};
PIFStarter_JavaPIF_starter1.registerOnTo_ender(JavaPIF_starter1_to_ender_listener);
}

@Start
public void startComponent() {
PIFEnder_JavaPIF_ender2.init();
PIFStarter_JavaPIF_starter2.init();
PIFStarter_JavaPIF_starter1.init();
TimerJava_JavaPIF_timer2.init();
TimerJava_JavaPIF_timer3.init();
PIFEnder_JavaPIF_ender3.init();
JavaPrinter_JavaPIF_printer.init();
TimerJava_JavaPIF_timer1.init();
PIFEnder_JavaPIF_ender1.init();
PIFStarter_JavaPIF_starter3.init();
TimerJava_JavaPIF_timer1.start();
PIFEnder_JavaPIF_ender3.start();
PIFStarter_JavaPIF_starter1.start();
JavaPrinter_JavaPIF_printer.start();
TimerJava_JavaPIF_timer3.start();
PIFEnder_JavaPIF_ender1.start();
PIFStarter_JavaPIF_starter3.start();
PIFEnder_JavaPIF_ender2.start();
TimerJava_JavaPIF_timer2.start();
PIFStarter_JavaPIF_starter2.start();
}

@Stop
public void stopComponent() {TimerJava_JavaPIF_timer2.stop();
PIFStarter_JavaPIF_starter2.stop();
TimerJava_JavaPIF_timer1.stop();
PIFEnder_JavaPIF_ender1.stop();
PIFEnder_JavaPIF_ender3.stop();
PIFStarter_JavaPIF_starter3.stop();
PIFStarter_JavaPIF_starter1.stop();
PIFEnder_JavaPIF_ender2.stop();
JavaPrinter_JavaPIF_printer.stop();
TimerJava_JavaPIF_timer3.stop();
}

}

