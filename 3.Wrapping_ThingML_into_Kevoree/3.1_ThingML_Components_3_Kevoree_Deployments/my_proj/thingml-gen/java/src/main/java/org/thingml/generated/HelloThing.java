/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import java.util.*;

/**
 * Definition for type : HelloThing
 **/
public class HelloThing extends Component  {

//Attributes
//Ports
//Message types
//Empty Constructor
public HelloThing() {
super(0);
}

//Constructor (all attributes)
public HelloThing(String name) {
super(name, 0);
}

//Getters and Setters for non readonly/final attributes
//Getters for Ports
private CompositeState buildHelloThing_HelloWorld(){
final List<AtomicState> states_HelloThing_HelloWorld = new ArrayList<AtomicState>();
final AtomicState state_HelloThing_HelloWorld_Greetings = new AtomicState("Greetings")
;
states_HelloThing_HelloWorld.add(state_HelloThing_HelloWorld_Greetings);
final AtomicState state_HelloThing_HelloWorld_Bye = new AtomicState("Bye")
{
@Override
public void onEntry() {
System.out.println("Bye.\n");
}

};
states_HelloThing_HelloWorld.add(state_HelloThing_HelloWorld_Bye);
final List<Region> regions_HelloThing_HelloWorld = new ArrayList<Region>();
final List<Handler> transitions_HelloThing_HelloWorld = new ArrayList<Handler>();
transitions_HelloThing_HelloWorld.add(new Transition("Handler_7678380", new NullEventType(), null, state_HelloThing_HelloWorld_Greetings, state_HelloThing_HelloWorld_Bye){
@Override
public void doExecute(final Event e) {
final NullEvent ce = (NullEvent) e;
System.out.println("Hello World!\n");
}

});
final CompositeState state_HelloThing_HelloWorld = new CompositeState("HelloWorld", states_HelloThing_HelloWorld, state_HelloThing_HelloWorld_Greetings, transitions_HelloThing_HelloWorld, regions_HelloThing_HelloWorld, false);
return state_HelloThing_HelloWorld;
}

public Component buildBehavior() {
//Init ports
//Init state machine
behavior = buildHelloThing_HelloWorld();
return this;
}

}
